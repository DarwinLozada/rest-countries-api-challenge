[{"C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\index.js":"1","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\App.js":"2","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\Header.jsx":"3","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\CountriesContainer.jsx":"4","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\Countries.jsx":"5","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\CountryCard.jsx":"6","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\filters\\Filters.jsx":"7","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\filters\\InputFilter.jsx":"8","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\filters\\RegionFilter.jsx":"9","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\CardsChunk.jsx":"10","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\pages\\DetailsPage.jsx":"11","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\pages\\Home.jsx":"12","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\iconsComponents\\IconComponents.jsx":"13","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\feedbackComponents\\LoadingSpinner.jsx":"14","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\pages\\404.jsx":"15","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\feedbackComponents\\Image.jsx":"16","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\pages\\TransitionPage.jsx":"17"},{"size":197,"mtime":1612991909683,"results":"18","hashOfConfig":"19"},{"size":1809,"mtime":1614555191412,"results":"20","hashOfConfig":"19"},{"size":1104,"mtime":1614556009107,"results":"21","hashOfConfig":"19"},{"size":1699,"mtime":1614557051822,"results":"22","hashOfConfig":"19"},{"size":2049,"mtime":1614467944536,"results":"23","hashOfConfig":"19"},{"size":1432,"mtime":1614489190048,"results":"24","hashOfConfig":"19"},{"size":954,"mtime":1614400745707,"results":"25","hashOfConfig":"19"},{"size":1966,"mtime":1614469017816,"results":"26","hashOfConfig":"19"},{"size":2641,"mtime":1614470875456,"results":"27","hashOfConfig":"19"},{"size":291,"mtime":1614403634171,"results":"28","hashOfConfig":"19"},{"size":6652,"mtime":1614556049015,"results":"29","hashOfConfig":"19"},{"size":744,"mtime":1614557118524,"results":"30","hashOfConfig":"19"},{"size":3851,"mtime":1614468960738,"results":"31","hashOfConfig":"19"},{"size":273,"mtime":1614405970173,"results":"32","hashOfConfig":"19"},{"size":1102,"mtime":1614557013780,"results":"33","hashOfConfig":"19"},{"size":922,"mtime":1614534303292,"results":"34","hashOfConfig":"19"},{"size":579,"mtime":1614556345910,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"jqbkok",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"38"},"C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\index.js",[],["76","77"],"C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\App.js",[],"C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\Header.jsx",[],"C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\CountriesContainer.jsx",[],"C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\Countries.jsx",[],"C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\CountryCard.jsx",[],"C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\filters\\Filters.jsx",["78"],"import React, { useEffect, useContext } from \"react\";\r\nimport RegionFilter from \"./RegionFilter\";\r\nimport InputFilter from \"./InputFilter\";\r\nimport { CountriesContext } from \"../CountriesContainer\";\r\n\r\nconst Filters = () => {\r\n  const [\r\n    filterRegion,\r\n    ,\r\n    inputQuery,\r\n    ,\r\n    ,\r\n    ,\r\n    setCountriesToRender,\r\n    countriesFilteredByInput,\r\n    ,\r\n  ] = useContext(CountriesContext);\r\n\r\n  useEffect(() => {\r\n    if (filterRegion !== \"All\") {\r\n      const filteredCountries = countriesFilteredByInput.current.filter(\r\n        (country) => country.region === filterRegion\r\n      );\r\n      setCountriesToRender(filteredCountries);\r\n      return;\r\n    }\r\n    setCountriesToRender(countriesFilteredByInput.current);\r\n  }, [inputQuery, filterRegion]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col sm:flex-row justify-between w-full gap-8\">\r\n      <InputFilter />\r\n      <RegionFilter />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\filters\\InputFilter.jsx",["79"],"import React, { useContext, useRef, useEffect } from \"react\";\r\nimport { CountriesContext } from \"../CountriesContainer\";\r\nimport { SearchIcon } from \"../iconsComponents/IconComponents\";\r\n\r\nconst InputFilter = () => {\r\n  const [\r\n    ,\r\n    ,\r\n    inputQuery,\r\n    setInputQuery,\r\n    allCountries,\r\n    ,\r\n    ,\r\n    countriesFilteredByInput,\r\n  ] = useContext(CountriesContext);\r\n\r\n  let inputRef = useRef();\r\n\r\n  const handleInputChange = (e) => {\r\n    e.preventDefault();\r\n    setInputQuery(e.target.value);\r\n  };\r\n\r\n  const returnFilteredCountriesByinput = () => {\r\n    const filteredContacts = allCountries.filter((country) =>\r\n      country.name.toLowerCase().includes(inputQuery.toLowerCase())\r\n    );\r\n    return filteredContacts;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (allCountries) {\r\n      const filteredCountries = returnFilteredCountriesByinput();\r\n      countriesFilteredByInput.current = filteredCountries;\r\n    }\r\n  }, [inputQuery]);\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <label htmlFor=\"country\" className=\"absolute opacity-0\">\r\n        Search for a country\r\n      </label>\r\n      <div\r\n        className=\"flex flex-row items-center min-w-min md:w-96 bg-white dark:darkBlue shadow-md rounded overflow-hidden truncate dark:bg-darkBlue transition duration-300\"\r\n        ref={inputRef}\r\n      >\r\n        <div className=\"ml-4 sm:ml-8 mr-4 sm:mx-8 dark:text-white\">\r\n          <SearchIcon width=\"1.4rem\" />\r\n        </div>\r\n        <input\r\n          className=\"transition duration-300 py-4 focus:outline-none dark:bg-darkBlue placeholder-grey dark:placeholder-white mr-4 w-full\"\r\n          type=\"text\"\r\n          id=\"country\"\r\n          placeholder=\"Search for a country...\"\r\n          onChange={handleInputChange}\r\n          onFocus={() => inputRef.current.classList.add(\"ring-2\")}\r\n          onBlur={() => inputRef.current.classList.remove(\"ring-2\")}\r\n        ></input>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputFilter;\r\n","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\filters\\RegionFilter.jsx",["80"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { ArrowIcon } from \"../iconsComponents/IconComponents\";\r\nimport { CountriesContext } from \"../CountriesContainer\";\r\n\r\nconst RegionFilter = () => {\r\n  const [isToggled, toggleButton] = useState(false);\r\n\r\n  const [\r\n    filterRegion,\r\n    setFilterRegion,\r\n    ,\r\n    ,\r\n    allCountries,\r\n    ,\r\n    ,\r\n    ,\r\n    countriesFilteredByRegion,\r\n  ] = useContext(CountriesContext);\r\n\r\n  const returnFilteredCountriesByRegion = () => {\r\n    const filteredCountry = allCountries.filter(\r\n      (country) => country.region === filterRegion\r\n    );\r\n    return filteredCountry;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (allCountries) {\r\n      const filteredCountries = returnFilteredCountriesByRegion();\r\n      countriesFilteredByRegion.current = filteredCountries;\r\n    }\r\n  }, [filterRegion]);\r\n\r\n  const regions = [\"Africa\", \"Americas\", \"Asia\", \"Europe\", \"Oceania\", \"All\"];\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-col min-w-min rounded w-1/6\">\r\n        <button\r\n          className=\"flex transition duration-300 items-center justify-between shadow-md bg-white p-3 rounded text-sm dark:bg-darkBlue px-6 focus:outline-none focus:ring-2 h-full\"\r\n          onBlur={() => toggleButton(false)}\r\n          onClick={() => toggleButton(!isToggled)}\r\n        >\r\n          <p className=\"font-semibold text-gray-500 dark:text-gray-200\">\r\n            {\" \"}\r\n            {filterRegion ? filterRegion : \"Filter by Region\"}\r\n          </p>\r\n\r\n          <div\r\n            className={`transform transition-transform duration-300 ml-8 ${\r\n              isToggled && \"rotate-180\"\r\n            }`}\r\n          >\r\n            <ArrowIcon width=\"1rem\" />\r\n          </div>\r\n        </button>\r\n        <div className=\"relative\">\r\n          {isToggled && (\r\n            <div className=\"flex flex-col absolute bg-white dark:bg-darkBlue p-4 rounded shadow-md top-2 z-10 w-full gap-1\">\r\n              {regions.map((region) => {\r\n                return (\r\n                  <button\r\n                    className=\"flex transition duration-100 hover:text-blue-300\"\r\n                    onMouseDown={(e) => {\r\n                      e.preventDefault();\r\n                    }}\r\n                    onClick={(e) => {\r\n                      setFilterRegion(region);\r\n                      toggleButton(false);\r\n                    }}\r\n                    key={region}\r\n                  >\r\n                    {region}\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default RegionFilter;\r\n","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\CardsChunk.jsx",[],"C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\pages\\DetailsPage.jsx",["81"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { BackArrowIcon } from \"../components/iconsComponents/IconComponents\";\r\nimport Image from \"../components/feedbackComponents/Image\";\r\nimport { allCountriesDataContext } from \"../App\";\r\nimport TransitionPage from \"./TransitionPage\";\r\n\r\nconst DetailsPage = ({ allCountriesData, countryName }) => {\r\n  const dataFromCountriesContext = useContext(allCountriesDataContext).find(\r\n    (country) => country.name === countryName\r\n  );\r\n\r\n  const [countryData, setCountryData] = useState(dataFromCountriesContext);\r\n\r\n  useEffect(() => {\r\n    if (!countryData) {\r\n      console.log(\"hola\");\r\n      axios\r\n        .get(`https://restcountries.eu/rest/v2/name/${countryName}`)\r\n        .then((response) => {\r\n          setCountryData(response.data[0]);\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  }, []);\r\n\r\n  if (!countryData) {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <div className=\"min-h-screen bg-veryLightGrey dark:bg-veryDarkBlueBg\" />\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"transition-colors duration-300 flex-col min-h-screen bg-veryLightGrey text-black dark:bg-veryDarkBlueBg dark:text-white\">\r\n      <Header />\r\n      <TransitionPage>\r\n        <div className=\"flex flex-col mx-8 lg:mx-16\">\r\n          <div className=\"flex mt-10 mb-14\">\r\n            <Link to={\"/\"}>\r\n              <button className=\"flex flex-row items-center justify-center px-10 shadow-md py-2 transition duration-300 rounded focus:outline-none focus:ring-2 text-black dark:text-white bg-white hover:bg-gray-200 dark:bg-darkBlue dark:hover:bg-gray-600\">\r\n                <div>\r\n                  <BackArrowIcon width=\"1rem\" />\r\n                </div>\r\n                <p className=\"ml-2\">Back</p>\r\n              </button>\r\n            </Link>\r\n          </div>\r\n          <main className=\"flex flex-col items-center lg:flex-row lg:gap-20 mb-32\">\r\n            <div className=\"flex justify-center h-auto items-center lg:w-1/2\">\r\n              <div className=\"flex w-full max-w-xl h-64 lg:max-w-screen-sm lg:min-w-min lg:h-96\">\r\n                <Image\r\n                  src={countryData.flag}\r\n                  alt={`${countryData.name} flag`}\r\n                  placeholderWidth={\"w-80 sm:w-96 lg:w-full\"}\r\n                  placeholderHeight={\"h-32 md:h-1/2\"}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex-col\">\r\n              <div>\r\n                <h2 className=\"text-2xl font-bold mt-7 mb-4\">\r\n                  {countryData.name}\r\n                </h2>\r\n              </div>\r\n              <ul className=\"flex flex-col md:flex-row md:gap-20 items-baseline\">\r\n                <div className=\"flex flex-col gap-2 text-sm\">\r\n                  <li className=\"font-semibold\">\r\n                    Native Name:{\" \"}\r\n                    <span className=\"font-normal\">{`${countryData.nativeName}`}</span>\r\n                  </li>\r\n                  <li className=\"font-semibold\">\r\n                    Population:{\" \"}\r\n                    <span className=\"font-normal\">{`${countryData.population}`}</span>\r\n                  </li>\r\n                  <li className=\"font-semibold\">\r\n                    Region:{\" \"}\r\n                    <span className=\"font-normal\">{`${countryData.region}`}</span>\r\n                  </li>\r\n                  <li className=\"font-semibold\">\r\n                    Sub Region:{\" \"}\r\n                    <span className=\"font-normal\">{`${countryData.subregion}`}</span>\r\n                  </li>\r\n                  <li className=\"font-semibold\">\r\n                    Capital:{\" \"}\r\n                    <span className=\"font-normal\">{`${countryData.capital}`}</span>\r\n                  </li>\r\n                </div>\r\n                <div className=\"flex flex-col text-sm mt-8 gap-2\">\r\n                  <li className=\"font-semibold\">\r\n                    Top Level Domain:{\" \"}\r\n                    <span className=\"font-normal\">{`${countryData.topLevelDomain[0]}`}</span>\r\n                  </li>\r\n                  <li className=\"font-semibold\">\r\n                    Currencies:{\" \"}\r\n                    {countryData.currencies.map((currency) => {\r\n                      return (\r\n                        <span\r\n                          className=\"font-normal\"\r\n                          key={currency.name}\r\n                        >{`${currency.name} `}</span>\r\n                      );\r\n                    })}\r\n                  </li>\r\n                  <li className=\"font-semibold\">\r\n                    Languages:{\" \"}\r\n                    {countryData.languages.map((language) => {\r\n                      return (\r\n                        <span\r\n                          className=\"font-normal\"\r\n                          key={language.name}\r\n                        >{`${language.name} `}</span>\r\n                      );\r\n                    })}\r\n                  </li>\r\n                </div>\r\n              </ul>\r\n              <div className=\"mt-8\">\r\n                <p className=\"font-semibold mb-8\">Border Countries: </p>\r\n                <div className=\"flex flex-row gap-4 flex-wrap\">\r\n                  {countryData.borders.length > 0 ? (\r\n                    countryData.borders.map((border) => {\r\n                      const borderCountry = allCountriesData.find(\r\n                        (country) => country.alpha3Code === border\r\n                      );\r\n                      return borderCountry ? (\r\n                        <Link\r\n                          to={`/${borderCountry.alpha3Code}`}\r\n                          key={`${countryData.name} to ${borderCountry.name}`}\r\n                        >\r\n                          <button\r\n                            className=\"px-8 py-1 rounded transition-colors shadow focus:outline-none focus:ring-2 text-black bg-white dark:bg-darkBlue dark:text-white hover:bg-gray-200 dark:hover:bg-gray-600\"\r\n                            key={`from ${countryData.name} to ${borderCountry}`}\r\n                          >\r\n                            <p> {borderCountry.name}</p>\r\n                          </button>\r\n                        </Link>\r\n                      ) : null;\r\n                    })\r\n                  ) : (\r\n                    <p>This country does not have borders</p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </TransitionPage>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailsPage;\r\n","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\pages\\Home.jsx",[],"C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\iconsComponents\\IconComponents.jsx",[],"C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\feedbackComponents\\LoadingSpinner.jsx",[],"C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\pages\\404.jsx",[],"C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\feedbackComponents\\Image.jsx",[],"C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\pages\\TransitionPage.jsx",["82"],"import React, { useState, useEffect } from \"react\";\r\n\r\nconst TransitionPage = ({ children }) => {\r\n  const [isEntering, setIsEntering] = useState(false);\r\n\r\n  const transitionStyles = {\r\n    exited: \"opacity-0\",\r\n    entered: \"opacity-1\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(isEntering);\r\n    setIsEntering(true);\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className={`transition-opacity duration-300 ${\r\n        isEntering ? transitionStyles.entered : transitionStyles.exited\r\n      }`}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransitionPage;\r\n",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":28,"column":6,"nodeType":"89","endLine":28,"endColumn":32,"suggestions":"90"},{"ruleId":"87","severity":1,"message":"91","line":36,"column":6,"nodeType":"89","endLine":36,"endColumn":18,"suggestions":"92"},{"ruleId":"87","severity":1,"message":"93","line":32,"column":6,"nodeType":"89","endLine":32,"endColumn":20,"suggestions":"94"},{"ruleId":"87","severity":1,"message":"95","line":27,"column":6,"nodeType":"89","endLine":27,"endColumn":8,"suggestions":"96"},{"ruleId":"87","severity":1,"message":"97","line":14,"column":6,"nodeType":"89","endLine":14,"endColumn":8,"suggestions":"98"},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'countriesFilteredByInput' and 'setCountriesToRender'. Either include them or remove the dependency array.","ArrayExpression",["101"],"React Hook useEffect has missing dependencies: 'allCountries', 'countriesFilteredByInput', and 'returnFilteredCountriesByinput'. Either include them or remove the dependency array.",["102"],"React Hook useEffect has missing dependencies: 'allCountries', 'countriesFilteredByRegion', and 'returnFilteredCountriesByRegion'. Either include them or remove the dependency array.",["103"],"React Hook useEffect has missing dependencies: 'countryData' and 'countryName'. Either include them or remove the dependency array.",["104"],"React Hook useEffect has a missing dependency: 'isEntering'. Either include it or remove the dependency array.",["105"],"no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},"Update the dependencies array to be: [inputQuery, filterRegion, setCountriesToRender, countriesFilteredByInput]",{"range":"116","text":"117"},"Update the dependencies array to be: [allCountries, countriesFilteredByInput, inputQuery, returnFilteredCountriesByinput]",{"range":"118","text":"119"},"Update the dependencies array to be: [allCountries, countriesFilteredByRegion, filterRegion, returnFilteredCountriesByRegion]",{"range":"120","text":"121"},"Update the dependencies array to be: [countryData, countryName]",{"range":"122","text":"123"},"Update the dependencies array to be: [isEntering]",{"range":"124","text":"125"},[736,762],"[inputQuery, filterRegion, setCountriesToRender, countriesFilteredByInput]",[934,946],"[allCountries, countriesFilteredByInput, inputQuery, returnFilteredCountriesByinput]",[839,853],"[allCountries, countriesFilteredByRegion, filterRegion, returnFilteredCountriesByRegion]",[999,1001],"[countryData, countryName]",[330,332],"[isEntering]"]