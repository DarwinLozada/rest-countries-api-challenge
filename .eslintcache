[{"C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\index.js":"1","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\App.js":"2","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\Header.jsx":"3","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\CountriesContainer.jsx":"4","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\Countries.jsx":"5","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\CountryCard.jsx":"6","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\filters\\Filters.jsx":"7","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\filters\\InputFilter.jsx":"8","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\filters\\RegionFilter.jsx":"9","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\CardsChunk.jsx":"10","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\pages\\DetailsPage.jsx":"11","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\pages\\Home.jsx":"12","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\iconsComponents\\IconComponents.jsx":"13","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\feedbackComponents\\LoadingSpinner.jsx":"14","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\pages\\404.jsx":"15","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\feedbackComponents\\Image.jsx":"16"},{"size":197,"mtime":1612991909683,"results":"17","hashOfConfig":"18"},{"size":1779,"mtime":1614451345497,"results":"19","hashOfConfig":"18"},{"size":1081,"mtime":1614453575176,"results":"20","hashOfConfig":"18"},{"size":1614,"mtime":1614453698617,"results":"21","hashOfConfig":"18"},{"size":2072,"mtime":1614404535077,"results":"22","hashOfConfig":"18"},{"size":1396,"mtime":1614454506068,"results":"23","hashOfConfig":"18"},{"size":954,"mtime":1614400745707,"results":"24","hashOfConfig":"18"},{"size":1966,"mtime":1614450545434,"results":"25","hashOfConfig":"18"},{"size":2730,"mtime":1614404634581,"results":"26","hashOfConfig":"18"},{"size":291,"mtime":1614403634171,"results":"27","hashOfConfig":"18"},{"size":6206,"mtime":1614455005771,"results":"28","hashOfConfig":"18"},{"size":527,"mtime":1614406485131,"results":"29","hashOfConfig":"18"},{"size":4134,"mtime":1614404571310,"results":"30","hashOfConfig":"18"},{"size":273,"mtime":1614405970173,"results":"31","hashOfConfig":"18"},{"size":489,"mtime":1614451182228,"results":"32","hashOfConfig":"18"},{"size":833,"mtime":1614454502768,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"jqbkok",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\index.js",[],["70","71"],"C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\App.js",[],"C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\Header.jsx",[],"C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\CountriesContainer.jsx",[],"C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\Countries.jsx",[],"C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\CountryCard.jsx",[],"C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\filters\\Filters.jsx",["72"],"import React, { useEffect, useContext } from \"react\";\r\nimport RegionFilter from \"./RegionFilter\";\r\nimport InputFilter from \"./InputFilter\";\r\nimport { CountriesContext } from \"../CountriesContainer\";\r\n\r\nconst Filters = () => {\r\n  const [\r\n    filterRegion,\r\n    ,\r\n    inputQuery,\r\n    ,\r\n    ,\r\n    ,\r\n    setCountriesToRender,\r\n    countriesFilteredByInput,\r\n    ,\r\n  ] = useContext(CountriesContext);\r\n\r\n  useEffect(() => {\r\n    if (filterRegion !== \"All\") {\r\n      const filteredCountries = countriesFilteredByInput.current.filter(\r\n        (country) => country.region === filterRegion\r\n      );\r\n      setCountriesToRender(filteredCountries);\r\n      return;\r\n    }\r\n    setCountriesToRender(countriesFilteredByInput.current);\r\n  }, [inputQuery, filterRegion]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col sm:flex-row justify-between w-full gap-8\">\r\n      <InputFilter />\r\n      <RegionFilter />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\filters\\InputFilter.jsx",["73"],"import React, { useContext, useRef, useEffect } from \"react\";\r\nimport { CountriesContext } from \"../CountriesContainer\";\r\nimport { SearchIcon } from \"../iconsComponents/IconComponents\";\r\n\r\nconst InputFilter = () => {\r\n  const [\r\n    ,\r\n    ,\r\n    inputQuery,\r\n    setInputQuery,\r\n    allCountries,\r\n    ,\r\n    ,\r\n    countriesFilteredByInput,\r\n  ] = useContext(CountriesContext);\r\n\r\n  let inputRef = useRef();\r\n\r\n  const handleInputChange = (e) => {\r\n    e.preventDefault();\r\n    setInputQuery(e.target.value);\r\n  };\r\n\r\n  const returnFilteredCountriesByinput = () => {\r\n    const filteredContacts = allCountries.filter((country) =>\r\n      country.name.toLowerCase().includes(inputQuery.toLowerCase())\r\n    );\r\n    return filteredContacts;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (allCountries) {\r\n      const filteredCountries = returnFilteredCountriesByinput();\r\n      countriesFilteredByInput.current = filteredCountries;\r\n    }\r\n  }, [inputQuery]);\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <label htmlFor=\"country\" className=\"absolute opacity-0\">\r\n        Search for a country\r\n      </label>\r\n      <div\r\n        className=\"flex flex-row items-center min-w-min md:w-96 bg-white dark:darkBlue shadow-md rounded overflow-hidden truncate dark:bg-darkBlue transition duration-300\"\r\n        ref={inputRef}\r\n      >\r\n        <div className=\"ml-4 sm:ml-8 mr-4 sm:mx-8 dark:text-white\">\r\n          <SearchIcon width=\"1.4rem\" />\r\n        </div>\r\n        <input\r\n          className=\"transition duration-300 py-4 focus:outline-none dark:bg-darkBlue placeholder-grey dark:placeholder-white mr-4 w-full\"\r\n          type=\"text\"\r\n          id=\"country\"\r\n          placeholder=\"Search for a country...\"\r\n          onChange={handleInputChange}\r\n          onFocus={() => inputRef.current.classList.add(\"ring-2\")}\r\n          onBlur={() => inputRef.current.classList.remove(\"ring-2\")}\r\n        ></input>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputFilter;\r\n","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\filters\\RegionFilter.jsx",["74"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { ArrowIcon } from \"../iconsComponents/IconComponents\";\r\nimport { CountriesContext } from \"../CountriesContainer\";\r\n\r\nconst RegionFilter = () => {\r\n  const [isToggled, toggleButton] = useState(false);\r\n\r\n  const [\r\n    filterRegion,\r\n    setFilterRegion,\r\n    ,\r\n    ,\r\n    allCountries,\r\n    ,\r\n    ,\r\n    ,\r\n    countriesFilteredByRegion,\r\n  ] = useContext(CountriesContext);\r\n\r\n  const returnFilteredCountriesByRegion = () => {\r\n    const filteredCountry = allCountries.filter(\r\n      (country) => country.region === filterRegion\r\n    );\r\n    return filteredCountry;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (allCountries) {\r\n      const filteredCountries = returnFilteredCountriesByRegion();\r\n      countriesFilteredByRegion.current = filteredCountries;\r\n    }\r\n  }, [filterRegion]);\r\n\r\n  const regions = [\"Africa\", \"Americas\", \"Asia\", \"Europe\", \"Oceania\", \"All\"];\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-col min-w-min rounded w-1/6\">\r\n        <button\r\n          className=\"flex transition duration-300 items-center justify-between shadow-md bg-white p-3 rounded text-sm dark:bg-darkBlue px-6 focus:outline-none focus:ring-2 h-full\"\r\n          onBlur={() => toggleButton(false)}\r\n          onClick={() => toggleButton(!isToggled)}\r\n        >\r\n          <p className=\"font-semibold text-gray-500 dark:text-gray-200\">\r\n            {\" \"}\r\n            {filterRegion ? filterRegion : \"Filter by Region\"}\r\n          </p>\r\n\r\n          <div\r\n            className={`transform transition-transform duration-300 ml-8 ${\r\n              isToggled && \"rotate-180\"\r\n            }`}\r\n          >\r\n            {/* {isToggled ? <UpArrow width=\"1rem\" /> : <DownArrow width=\"1rem\" />} */}\r\n            <ArrowIcon width=\"1rem\" />\r\n          </div>\r\n        </button>\r\n        <div className=\"relative\">\r\n          {isToggled && (\r\n            <div className=\"flex flex-col absolute bg-white dark:bg-darkBlue p-4 rounded shadow-md top-2 z-10 w-full gap-1\">\r\n              {regions.map((region) => {\r\n                return (\r\n                  <button\r\n                    className=\"flex transition duration-100 hover:text-blue-300\"\r\n                    onMouseDown={(e) => {\r\n                      e.preventDefault();\r\n                    }}\r\n                    onClick={(e) => {\r\n                      setFilterRegion(region);\r\n                      toggleButton(false);\r\n                    }}\r\n                    key={region}\r\n                  >\r\n                    {region}\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default RegionFilter;\r\n","C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\CardsChunk.jsx",[],"C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\pages\\DetailsPage.jsx",["75"],"C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\pages\\Home.jsx",[],"C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\iconsComponents\\IconComponents.jsx",[],"C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\feedbackComponents\\LoadingSpinner.jsx",[],"C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\pages\\404.jsx",[],"C:\\Users\\Darwin Lozada\\Desktop\\Programacion\\Frontend-mentor-challenges\\frontend-mentor-challenges\\rest-countries-api-with-color-theme-switcher\\src\\components\\feedbackComponents\\Image.jsx",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":28,"column":6,"nodeType":"82","endLine":28,"endColumn":32,"suggestions":"83"},{"ruleId":"80","severity":1,"message":"84","line":36,"column":6,"nodeType":"82","endLine":36,"endColumn":18,"suggestions":"85"},{"ruleId":"80","severity":1,"message":"86","line":32,"column":6,"nodeType":"82","endLine":32,"endColumn":20,"suggestions":"87"},{"ruleId":"80","severity":1,"message":"88","line":26,"column":6,"nodeType":"82","endLine":26,"endColumn":8,"suggestions":"89"},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'countriesFilteredByInput' and 'setCountriesToRender'. Either include them or remove the dependency array.","ArrayExpression",["92"],"React Hook useEffect has missing dependencies: 'allCountries', 'countriesFilteredByInput', and 'returnFilteredCountriesByinput'. Either include them or remove the dependency array.",["93"],"React Hook useEffect has missing dependencies: 'allCountries', 'countriesFilteredByRegion', and 'returnFilteredCountriesByRegion'. Either include them or remove the dependency array.",["94"],"React Hook useEffect has missing dependencies: 'countryData' and 'countryName'. Either include them or remove the dependency array.",["95"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},"Update the dependencies array to be: [inputQuery, filterRegion, setCountriesToRender, countriesFilteredByInput]",{"range":"104","text":"105"},"Update the dependencies array to be: [allCountries, countriesFilteredByInput, inputQuery, returnFilteredCountriesByinput]",{"range":"106","text":"107"},"Update the dependencies array to be: [allCountries, countriesFilteredByRegion, filterRegion, returnFilteredCountriesByRegion]",{"range":"108","text":"109"},"Update the dependencies array to be: [countryData, countryName]",{"range":"110","text":"111"},[736,762],"[inputQuery, filterRegion, setCountriesToRender, countriesFilteredByInput]",[934,946],"[allCountries, countriesFilteredByInput, inputQuery, returnFilteredCountriesByinput]",[839,853],"[allCountries, countriesFilteredByRegion, filterRegion, returnFilteredCountriesByRegion]",[951,953],"[countryData, countryName]"]